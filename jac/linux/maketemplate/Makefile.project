#默认应该是解决方案调用过来的
ifdef SolutionDir
#配置类型
#ConfigurationType := exe/dll/lib
export ConfigurationType := exe

#依赖项目列表
ProjectDependList :=

#预编译头文件
export GCHHead := stdafx.h

include $(MakeInc)/ProjectVar.def

#附加包含目录(修改VPATH)
#AttachInc := $(AttachInc) -ISomeInc

#附加库目录
#AttachDllDir := $(AttachDllDir) -LSomeLib

#定义宏
#DefMacro := $(DefMacro) -D_DEBUG

#取消定义宏
#UndoMacro := $(UndoMacro) -UWIN32

#附加动态库
#AttachDll := $(AttachDll)  -lsomelib

#附加静态库
#AttachLib := $(AttachLib) libsome.a

#代码生成选项
LDFLAGS := $(LDFLAGS) $(AttachDll)

#编译选项
CPPFLAGS := $(CPPFLAGS) $(AttachInc) $(AttachDllDir) $(DefMacro) $(UndoMacro)

#静态库生成选项
#ARFLAGS := $(ARFLAGS)

include $(MakeInc)/ProjectTarget.mak

else
#说明是在当前目录下进行make，先跳转到解决方案获取变量
#解决方案目录
SolutionDir := ../../
#makefile包含目录
MakeInc := $(SolutionDir)/include/makeinclude
include $(MakeInc)/ProjectToSolution.def
endif

