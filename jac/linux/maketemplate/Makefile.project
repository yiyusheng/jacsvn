#默认应该是解决方案调用过来的
ifdef SolutionDir
#配置类型
#ConfigurationType := exe/dll/lib
export ConfigurationType := exe

#依赖项目列表
ProjectDependList :=

#预编译头文件
export GCHHead := stdafx.h

include $(MakeInc)/ProjectVar.def

#附加包含目录(修改VPATH)
#AttachInc := $(AttachInc) -ISomeInc

#附加库目录
#AttachDllDir := $(AttachDllDir) -LSomeLib

#定义宏
#DefMacro := $(DefMacro) -D_DEBUG

#取消定义宏
#UndoMacro := $(UndoMacro) -UWIN32

#附加动态库
#AttachDll := $(AttachDll)  -lsomelib

#附加静态库
#AttachLib := $(AttachLib) libsome.a

#代码生成选项
LDFLAGS := $(LDFLAGS) $(AttachDll)

#编译选项
CPPFLAGS := $(CPPFLAGS) $(AttachInc) $(AttachDllDir) $(DefMacro) $(UndoMacro)

#make的文件搜寻目录
export VPATH := $(subst $(space),:,$(patsubst -I%,%,$(AttachInc))):$(patsubst -L%,%,$(subst $(space),:,$(AttachDllDir))):$(IntDir):$(OutDir)

#终级目标信赖项
TargetDepend := $(ProjectDependList) $(Folders) $(notdir $(GCH)) object target

#默认目标
all $(ProjectName): $(TargetDepend)
	@echo Project:$(ProjectName) success complete! Target:$@

#编译信赖的项目
ProjectDependList:
	$(Make) -r -C $(SolutionSrc)/$@

#创建需要的文件夹
$(Folders):
	-mkdir $@

#确保在只有debug和release一个参数时，make能够正常执行
SingleConfigurationDepend :=
ifeq ($(MAKECMDGOALS),debug)
SingleConfigurationDepend := $(TargetDepend)
else
ifeq ($(MAKECMDGOALS),release)
SingleConfigurationDepend := $(TargetDepend)
endif
endif

debug release: $(SingleConfigurationDepend)
	@echo Project:$(ProjectName) success complete! Target:$@

#生成预编译头
$(GCHFile): $(GCHHead)
	$(CXX) $(CPPFLAGS) $(ProjectInc)/$(GCHHead) -o $(IntDir)/$(GCHFile)

#生成所有obj文件
object:
	$(Make) -f $(MakeInc)/ProjectDepend.mak

#根据配置类型选择终极目标的生成命令
ifeq ($(ConfigurationType),lib)
CreateTargetCmd := $(AR) -rs $(TargetPath) $(AllObjects)
else
CreateTargetCmd := $(CXX) $(CPPFLAGS) $(LDFLAGS) -o $(TargetPath) $(AllObjects) $(AttachLib)
endif
target:
	$(CreateTargetCmd)


.PHONY : all $(ProjectName) clean debug release $(ProjectDependList) object target

clean :
	-rm -f $(AllObjects) $(AllDepends) $(TargetPath) $(GCH)


else
#说明是在当前目录下进行make，先跳转到解决方案获取变量
#解决方案目录
SolutionDir := ../../
#makefile包含目录
MakeInc := $(SolutionDir)/include/makeinclude
include $(MakeInc)/ProjectToSolution.def
endif

