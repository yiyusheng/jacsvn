#################################################################################
#    asyframe for asyframe@gmail.com											#
#																				#
#    Copyright (C) 2011, asyframe@gmail.com, http://asyframe.googlecode.com/	#
#																				#
#    This program is free software: you can redistribute it and/or modify		#
#    it under the terms of the GNU General Public License as published by		#
#    the Free Software Foundation, either version 3 of the License, or			#
#	(at your option) any later version.											#
#																				#
#    This program is distributed in the hope that it will be useful,			#
#    but WITHOUT ANY WARRANTY; without even the implied warranty of				#
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the				#
#    GNU General Public License for more details.								#
#																				#
#    You should have received a copy of the GNU General Public License			#
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.		#
#################################################################################

#对依赖项目列表过滤
ProjectDependList := $(filter-out $(ProjectExcludeList),$(ProjectDependList))
#项目目录
export ProjectDir := $(shell pwd)
#项目名称
export ProjectName := $(shell basename $(ProjectDir))
#项目临时文件目录
export ProjectTmp := $(SolutionTmp)/$(ProjectName)
#中间目录
export IntDir := $(ProjectTmp)/$(ConfigurationName)
#包含目录
export ProjectInc := $(SolutionInc)/$(ProjectName)
#库目录
export ProjectLib := $(SolutionLib)/$(ConfigurationName)
#bin目录
export ProjectBin := $(SolutionBin)/$(ConfigurationName)

ifeq ($(ConfigurationType),exe)
#输出目录
export OutDir := $(ProjectBin)
#目标名称
export TargetName := $(ProjectName)
#代码生成选项
export LDFLAGS := $(SolutionLDFLAGS)
else
ifeq ($(ConfigurationType),dll)
#输出目录
export OutDir := $(ProjectLib)
#目标名称
export TargetName := lib$(ProjectName).so
#代码生成选项
export LDFLAGS := $(SolutionLDFLAGS) -shared -fPIC
else
#输出目录
export OutDir := $(ProjectLib)
#目标名称
export TargetName := lib$(ProjectName).a
#代码生成选项
export LDFLAGS := $(SolutionLDFLAGS)
endif
endif

#需要创建的文件夹
ProjectFolders := $(SolutionBin) $(SolutionLib) $(SolutionTmp) $(ProjectTmp) $(IntDir) $(OutDir)

#预编译头的输出文件
export GCHFile := $(GCHHead).gch
#预编译头的依赖文件
export GCHDependFile := $(GCHHead).d
#预编译头的生成目录
export GCHDir := $(ProjectTmp)/GCH/$(ConfigurationName)

#附加包含目录
export AttachInc := -I$(GCHDir) -I$(ProjectInc) -I$(SolutionInc)
#附加库目录
export AttachDllDir := -L$(ProjectLib) -L$(SolutionLib)
#定义宏
export DefMacro :=
ifeq ($(ConfigurationName),debug)
DefMacro := $(DefMacro) -D_DEBUG
#编译选项
export CPPFLAGS := $(SolutionCPPFLAGS) -g
else
DefMacro := $(DefMacro) -DNDEBUG
#编译选项
export CPPFLAGS := $(SolutionCPPFLAGS) -O3
endif
#取消定义宏
export UndoMacro :=
#附加动态库
export AttachDll :=
#附加静态库
export AttachLib := $(SolutionAttachLib)
#静态库生成选项
export ARFLAGS := $(SolutionARFLAGS) -r -s

ifdef GCHHead
#预编译头的输出文件的路径
GCH := $(GCHDir)/$(GCHFile)
GCHDepend := $(GCHDir)/$(GCHDependFile)
CPPFLAGS := $(CPPFLAGS) -Winvalid-pch
ProjectFolders := $(ProjectFolders) $(ProjectTmp)/GCH $(GCHDir)
else
GCH :=
GCHDepend :=
endif

#项目所有的源文件
export AllSources := $(shell find $(ProjectDir) \( -name "*.cpp" -o -name "*.cxx" -o -name "*.cc" -o -name "*.C" -o -name "*.c" \))
export AllBasenames := $(basename $(AllSources))
#项目所有的信赖文件
export AllDepends := $(AllBasenames:$(ProjectDir)%=$(IntDir)%.d)
#项目所有的二进制目标文件
export AllObjects := $(AllBasenames:$(ProjectDir)%=$(IntDir)%.o)

